language: cpp

# configure branches to build
branches:
  only:
  - master
  - develop

# build configuration matrix
matrix:
  include:
  - os: linux
    env: CONFIG=Debug
    compiler: gcc
  - os: linux
    env: CONFIG=Release
    compiler: gcc
  - os: linux
    env: CONFIG=Debug
    compiler: clang
  - os: linux
    env: CONFIG=Release
    compiler: clang
  - os: osx
    env: CONFIG=Debug
    compiler: gcc
  - os: osx
    env: CONFIG=Release
    compiler: gcc
  - os: osx
    env: CONFIG=Debug
    compiler: clang
  - os: osx
    env: CONFIG=Release
    compiler: clang
  - os: linux
    env: CONFIG=Alternatives
    compiler: gcc
sudo: false
dist: xenial

before_install:
  - if [ "$TRAVIS_OS_NAME" == linux ] ; then sudo apt-get install -y xorg-dev libglfw3-dev; fi
  - if [ "$CONFIG" == "Debug" ] && [ "$CXX" == "g++" ] && [ "$TRAVIS_OS_NAME" == linux ] ; then pip install --user cpp-coveralls ; fi
  - if [ "$CONFIG" == "Debug" ] && [ "$CXX" == "g++" ] && [ "$TRAVIS_OS_NAME" == linux ] ; then sudo apt-get install -y texlive-base ; fi
  - if [ "$CONFIG" == "Debug" ] && [ "$CXX" == "g++" ] && [ "$TRAVIS_OS_NAME" == linux ] ; then sudo apt-get install -y doxygen ; fi
  - if [ "$CONFIG" == "Debug" ] && [ "$CXX" == "g++" ] && [ "$TRAVIS_OS_NAME" == linux ] ; then sudo apt-get install -y ruby-dev ; fi
  - if [ "$CONFIG" == "Debug" ] && [ "$CXX" == "g++" ] && [ "$TRAVIS_OS_NAME" == linux ] ; then sudo gem install jekyll -v 3.8.5  && sudo gem install jekyll-seo-tag ; fi

before_script:
  - mkdir build
  - cd build
  - if [ "$CONFIG" != "Alternatives" ]; then cmake -DCMAKE_BUILD_TYPE=${CONFIG} .. ; else cmake -DCMAKE_BUILD_TYPE=Debug -DPMP_INDEX_TYPE=64 -DPMP_SCALAR_TYPE=64 .. ; fi
  - if [ "$CONFIG" == "Debug" ] && [ "$CXX" == "g++" ] && [ "$TRAVIS_OS_NAME" == linux ] ; then cmake -DENABLE_COVERAGE=true .. ; fi

script:
  - make -j 2
  - make test
  - if [ "$CONFIG" == "Debug" ] && [ "$CXX" == "g++" ] && [ "$TRAVIS_OS_NAME" == linux ] ; then make docs ; fi

after_success:
  - if [ "$CONFIG" == "Debug" ] && [ "$CXX" == "g++" ] && [ "$TRAVIS_OS_NAME" == linux ] ; then coveralls --gcov-options '\-lp' --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*tests/.*.cpp.*" ; fi

deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN
  on:
    branch: master
    condition: "$CONFIG = Debug && $CXX = g++ && $TRAVIS_OS_NAME = linux"
  local_dir: build/docs/html
  fqdn: www.pmp-library.org